//  Progress Bar code 


    //   <View style={styles.container}>
    //     <View style={[commonStyles.innerCircle,{position:'absolute',left:20,top:18,backgroundColor:theme.color.primary}]} />
    //     <View style={[commonStyles.innerCircle,{position:'absolute', left:100, top:18,backgroundColor:theme.color.primary}]} />
    //     <View style={[commonStyles.innerCircle,{position:'absolute', left:180, top:18,backgroundColor:theme.color.primary}]} />
    //     <View style={[commonStyles.innerCircle,{position:'absolute', right:100, top:18,backgroundColor:theme.color.primary}]} />
    //     <View style={[commonStyles.innerCircle,{position:'absolute',right:20,top:18,backgroundColor:theme.color.primary}]} />
    //     <View style={styles.progressContainer}>
    //       <Progress.Bar
    //         progress={steps[currentStep].progress}
    //         width={Platform.OS == 'ios' ? 330 : 350 }
    //         height={5}
    //         color={theme.color.primary}
    //         borderWidth={0.4}
    //         borderColor={theme.color.descColor}
    //       />
    //     </View>
    //     <View style={styles.stepsContainer}>
    //       {steps.map((step:any, index:any) => (
    //         <View
    //           key={index}
    //           style={[
    //             styles.stepItem,
    //             { flex: index === steps.length - 0 ? -1 : 1 },
    //             index <= currentStep && styles.activeStep,
    //           ]}
    //         >
    //           <Typography color={theme.color.tgray} size={theme.fontSize.extraSmall12}
    //             // style={[
    //             //   styles.stepLabel,
    //             //   index === currentStep && styles.activeStepText,
    //             // ]}
    //           >
    //             {step.label}
    //           </Typography>
    //           {/* {index < steps.length - 1 && <View style={styles.separator} />} */}
    //         </View>
    //       ))}
    //     </View>
        
    //   </View>




    // MOdal Code Camera and Gallery 

         {/* <Modal animationType="slide" transparent={true} visible={visible}>
        <TouchableOpacity
          onPress={() => setVisible(false)}
          style={styles.centerView}
        />
        <View style={{ position: "absolute", bottom: 20 }}>
          <View style={styles.modalStyle}>
            <TouchableOpacity
              style={styles.profileStyle}
              onPress={takePhotoFromCamera}
            >
              <Typography style={styles.textStyle}>Take Photos</Typography>
            </TouchableOpacity>
            <View style={styles.lineBar} />
            <TouchableOpacity
              style={styles.profileStyle}
              onPress={choosePhotoFromLibrary}
            >
              <Typography style={styles.textStyle}>
                Choose from Gallery 
              </Typography>
            </TouchableOpacity>
          </View>
          <View style={[styles.cancelStyle, { marginTop: 10 }]}>
            <TouchableOpacity onPress={() => setVisible(false)}>
              <Typography style={{ color: "#007bff" }}>Cancel</Typography>
            </TouchableOpacity>
          </View>
        </View>
      </Modal> */}

